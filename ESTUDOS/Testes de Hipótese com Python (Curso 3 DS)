{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["ypF1DqjCeRwS","BjGRnpbCE5ox","0FsfoxaHXsTk","6WXszep1jAgY","fX-1P3c1kDSq","qogO7K09yLAg","vssx7Cq12dqE"],"mount_file_id":"1RSw3ihEJtr6_mnzJam9ofxAMgT-5TCX1","authorship_tag":"ABX9TyMx8SqQLldZIcI8KD0ezOrc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 1. **CONHECENDO A METODOLOGIA**"],"metadata":{"id":"OEwrFVQpUxdA"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"Q1z0A927T1Eb","executionInfo":{"status":"ok","timestamp":1722123835491,"user_tz":180,"elapsed":785,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"outputs":[],"source":["# Carregando as bibliotecas\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":["# 1.1 Podemos tirar conclusões a partir de uma amostra?\n","**Por que podemos tirar conclusões a partir de uma amostra?** Para responder essa questão vamos realizar um experimento.\n","Abaixo temos três conjuntos de dados diferentes que nos mostram formatos de distribuições diferentes:\n","\n","\n","*   **Idade de Aposentadoria:** Coletamos dados de idade de aposentadoria de uma amostra e, ao analisar o histograma dessas idades, observamos que há uma concentração na faixa média de idades, mas algumas pessoas aposentam mais cedo\n","*   **Tempo de Vida de uma Lâmpada:** É essencial para garantir qualidade, eficiência energética e planejar estratégias de manutenção. Sabendo como uma lâmpada vive podemos oferecer garantias confiáveis ...\n","\n"],"metadata":{"id":"1h-SqHKMVcYm"}},{"cell_type":"code","source":["# Leitura dos dados\n","\n","#leitura das alturas\n","dados_alturas = pd.read_csv(\"/content/drive/MyDrive/Bancos de Dados ALURA/DADOS_CURSO_3/dados_alturas.csv\")\n","\n","#leitura da aposentadoria\n","dados_idade_aposentadoria = pd.read_csv(\"/content/drive/MyDrive/Bancos de Dados ALURA/DADOS_CURSO_3/dados_idade_aposentadoria.csv\")\n","\n","#leitura do tempo de vida da lâmpada\n","dados_vida_lampada = pd.read_csv(\"/content/drive/MyDrive/Bancos de Dados ALURA/DADOS_CURSO_3/dados_vida_lampada.csv\")"],"metadata":{"id":"EbsSDwHtVXY6","executionInfo":{"status":"ok","timestamp":1722123837059,"user_tz":180,"elapsed":1238,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["dados_alturas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"RqBAvHUlY15C","executionInfo":{"status":"ok","timestamp":1722123837060,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"b9bb65a3-24bd-4a0f-a9e6-238d52198af8"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     alturas\n","0     167.52\n","1     185.21\n","2     172.74\n","3     171.52\n","4     157.75\n","..       ...\n","995   164.32\n","996   179.74\n","997   142.61\n","998   162.04\n","999   151.46\n","\n","[1000 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-4738a433-9638-4631-b151-d59ce5a70b6e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alturas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>167.52</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>185.21</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>172.74</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>171.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>157.75</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>164.32</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>179.74</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>142.61</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>162.04</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>151.46</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4738a433-9638-4631-b151-d59ce5a70b6e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4738a433-9638-4631-b151-d59ce5a70b6e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4738a433-9638-4631-b151-d59ce5a70b6e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-91d18486-109b-474b-a78b-09739c728d54\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91d18486-109b-474b-a78b-09739c728d54')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-91d18486-109b-474b-a78b-09739c728d54 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_985e043c-49de-4820-9108-5705255de54b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dados_alturas')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_985e043c-49de-4820-9108-5705255de54b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dados_alturas');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dados_alturas","summary":"{\n  \"name\": \"dados_alturas\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"alturas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.238369585210497,\n        \"min\": 139.8,\n        \"max\": 199.46,\n        \"num_unique_values\": 882,\n        \"samples\": [\n          168.36,\n          166.41,\n          161.68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["dados_idade_aposentadoria"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_kY61E8yY56U","executionInfo":{"status":"ok","timestamp":1722123837060,"user_tz":180,"elapsed":5,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"96867d78-dfea-4101-a7a4-5c9980a98e98"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      idade\n","0        66\n","1        66\n","2        60\n","3        61\n","4        57\n","...     ...\n","1045     25\n","1046     30\n","1047     25\n","1048     25\n","1049     25\n","\n","[1050 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-2a30b463-23da-4fd0-82c1-5936955a8771\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>idade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1045</th>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>1046</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>1047</th>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>1048</th>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>1049</th>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1050 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2a30b463-23da-4fd0-82c1-5936955a8771')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2a30b463-23da-4fd0-82c1-5936955a8771 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2a30b463-23da-4fd0-82c1-5936955a8771');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c42604a8-103a-45f3-a1eb-043325596352\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c42604a8-103a-45f3-a1eb-043325596352')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c42604a8-103a-45f3-a1eb-043325596352 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4b7d5797-617c-490a-924e-fd78b8bb6323\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dados_idade_aposentadoria')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4b7d5797-617c-490a-924e-fd78b8bb6323 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dados_idade_aposentadoria');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dados_idade_aposentadoria","summary":"{\n  \"name\": \"dados_idade_aposentadoria\",\n  \"rows\": 1050,\n  \"fields\": [\n    {\n      \"column\": \"idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 25,\n        \"max\": 78,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          55,\n          59,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["dados_vida_lampada"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"FSfyOWr4Y8PS","executionInfo":{"status":"ok","timestamp":1722123837060,"user_tz":180,"elapsed":4,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"8b5ff2b3-ff54-4c92-af40-c242742b365e"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         duracao\n","0    2238.462196\n","1     404.474833\n","2     358.025869\n","3    2193.463611\n","4    1072.377941\n","..           ...\n","995   428.145393\n","996  3756.951610\n","997  2991.204843\n","998   821.565512\n","999   116.062554\n","\n","[1000 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-822dc7fb-2716-4592-bbc7-ed8c12109831\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duracao</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2238.462196</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>404.474833</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>358.025869</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2193.463611</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1072.377941</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>428.145393</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>3756.951610</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>2991.204843</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>821.565512</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>116.062554</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-822dc7fb-2716-4592-bbc7-ed8c12109831')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-822dc7fb-2716-4592-bbc7-ed8c12109831 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-822dc7fb-2716-4592-bbc7-ed8c12109831');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a52e4ec9-c7cc-4a9c-9f61-f21d87fca491\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a52e4ec9-c7cc-4a9c-9f61-f21d87fca491')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a52e4ec9-c7cc-4a9c-9f61-f21d87fca491 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9ef9d633-3a83-42c4-9169-32888ff2d8af\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dados_vida_lampada')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9ef9d633-3a83-42c4-9169-32888ff2d8af button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dados_vida_lampada');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dados_vida_lampada","summary":"{\n  \"name\": \"dados_vida_lampada\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"duracao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1184.737413680481,\n        \"min\": 59.174632,\n        \"max\": 8625.788217,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          1368.558217,\n          1148.903263,\n          2610.996711\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":[],"metadata":{"id":"XQvc7w10Y-UG","executionInfo":{"status":"ok","timestamp":1722123837060,"user_tz":180,"elapsed":4,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#varias distribuicoes\n","plt.subplots(figsize = (20,5))\n","plt.subplot(131)\n","plt.title(\"Distribuição de Idade de Aposentadoria\")\n","plt.xlabel(\"Idade de Aposentadoria\")\n","plt.ylabel(\"Frequência\")\n","plt.hist(dados_idade_aposentadoria, bins=30, color = \"blue\", alpha = 0.7)\n","\n","plt.subplot(132)\n","plt.hist(dados_vida_lampada, bins=30, alpha=0.7, color=\"purple\")\n","plt.title(\"Distribuição do Tempo de Vida da Lâmpada\")\n","plt.xlabel(\"Tempo de Vida da Lâmpada (horas)\")\n","plt.ylabel(\"Frequência\")\n","\n","plt.subplot(133)\n","plt.hist(dados_alturas, bins=30, alpha=0.7, color=\"green\")\n","plt.title(\"Distribuição das Alturas\")\n","plt.xlabel(\"Alturas (cm)\")\n","plt.ylabel(\"Frequência\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":532},"id":"9W7D37toXwck","executionInfo":{"status":"ok","timestamp":1722123837993,"user_tz":180,"elapsed":937,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"92dfa8ee-f23f-4896-f85d-11046cc919fd"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-6-f243315d9db6>:3: MatplotlibDeprecationWarning: Auto-removal of overlapping axes is deprecated since 3.6 and will be removed two minor releases later; explicitly call ax.remove() as needed.\n","  plt.subplot(131)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# REAMOSTRAGENS\n","\n","#tamanho da amostra\n","n=100\n","\n","#quantidade de amostras\n","qtd = 100000\n","\n","#função de reamostragem e cálculo de médias\n","def reamostragem_medias(dados, coluna, n, qtd):\n","  medias = [dados[coluna].sample(n, replace=True).mean() for q in range(qtd)]\n","  return medias"],"metadata":{"id":"KD2pt8SVYDdQ","executionInfo":{"status":"ok","timestamp":1722123837993,"user_tz":180,"elapsed":4,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Realizando as reamostragens com a função\n","media_idade = reamostragem_medias(dados_idade_aposentadoria, \"idade\", n, qtd)\n","media_duracao = reamostragem_medias(dados_vida_lampada, \"duracao\", n, qtd)\n","media_altura = reamostragem_medias(dados_alturas, \"alturas\", n, qtd)"],"metadata":{"id":"b2im_JvVbE2Q","executionInfo":{"status":"ok","timestamp":1722123894053,"user_tz":180,"elapsed":56063,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["# **PARA SABER MAIS: EFEITO DO TAMANHO DA AMOSTRA**"],"metadata":{"id":"ypF1DqjCeRwS"}},{"cell_type":"code","source":["dados_idade_sabermais = dados_idade_aposentadoria.sample(100)\n","dados_idade_sabermais"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"M7V7zSzYc6iA","executionInfo":{"status":"ok","timestamp":1722123894053,"user_tz":180,"elapsed":16,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"8b529d19-d4fc-4a63-9fb0-493ea2d065cb"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      idade\n","468      63\n","45       65\n","955      68\n","657      68\n","1009     29\n","...     ...\n","36       63\n","905      62\n","285      64\n","360      61\n","1013     25\n","\n","[100 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-a6ceeb7a-5ab2-4433-b8ea-1fa359a8d760\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>idade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>468</th>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>955</th>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>657</th>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>1009</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>905</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>285</th>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>360</th>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>1013</th>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6ceeb7a-5ab2-4433-b8ea-1fa359a8d760')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a6ceeb7a-5ab2-4433-b8ea-1fa359a8d760 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a6ceeb7a-5ab2-4433-b8ea-1fa359a8d760');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-75773cbc-38a0-42d7-9b2c-10179a95517b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75773cbc-38a0-42d7-9b2c-10179a95517b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-75773cbc-38a0-42d7-9b2c-10179a95517b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0b50d99e-2e1c-497a-be2e-bfe1b0a19230\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dados_idade_sabermais')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0b50d99e-2e1c-497a-be2e-bfe1b0a19230 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dados_idade_sabermais');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dados_idade_sabermais","summary":"{\n  \"name\": \"dados_idade_sabermais\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 25,\n        \"max\": 77,\n        \"num_unique_values\": 28,\n        \"samples\": [\n          64,\n          59,\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["medias_sabermais = [dados_idade_sabermais[0:i][\"idade\"].mean() for i in range(1, 100)]\n","plt.figure(figsize=(19,5))\n","plt.title(\"Efeito do Tamanho da Amostra\", fontsize=18)\n","plt.xlabel(\"Tamanho da Amostra\", fontsize=14)\n","plt.ylabel(\"Média das Idades\", fontsize=14)\n","plt.xticks(fontsize=14)\n","plt.yticks(fontsize=14)\n","plt.plot(medias_sabermais, alpha=0.7, color=\"green\", lw=3)\n","plt.grid()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"BndgcuxQedCE","executionInfo":{"status":"ok","timestamp":1722123894750,"user_tz":180,"elapsed":700,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"32d29aa2-c8f8-455c-9a8e-597c0ad0dd75"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1900x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"IHOZt8p4e6nl","executionInfo":{"status":"ok","timestamp":1722123894750,"user_tz":180,"elapsed":5,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["# **População vs Amostra**\n","vamos comparar agora a distribuição original com a distribuição das amostras, comparando a média das distribuições originais com a distribuição média das médias amostrais"],"metadata":{"id":"nG_CS-xYi0b-"}},{"cell_type":"code","source":["print(\"********** MÉDIAS POPULACIONAIS ***********\")\n","\n","print(f\"Idade média de aposentadoria: {dados_idade_aposentadoria.idade.mean()}\")\n","print(f\"Duração média das lâmpadas: {dados_vida_lampada.duracao.mean()}\")\n","print(f\"Altura média dos funcionários: {dados_alturas.alturas.mean()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Iut4JbfPjRPB","executionInfo":{"status":"ok","timestamp":1722123894750,"user_tz":180,"elapsed":4,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"7502c23c-04e7-4646-e24a-6f24d687c4ed"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["********** MÉDIAS POPULACIONAIS ***********\n","Idade média de aposentadoria: 62.70857142857143\n","Duração média das lâmpadas: 1731.8036029420002\n","Altura média dos funcionários: 169.52022\n"]}]},{"cell_type":"code","source":["def faz_media(amostra):\n","  return sum(amostra)/len(amostra)\n","\n","print(\"********** MÉDIAS AMOSTRAIS ***********\")\n","print(f\"Idade média amostral: {faz_media(media_idade)}\")\n","print(f\"Duração média amostral: {faz_media(media_duracao)}\")\n","print(f\"Altura média amostral: {faz_media(media_altura)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zmROR7y7jgd1","executionInfo":{"status":"ok","timestamp":1722123894750,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"99f404df-406a-4485-ca2c-d6b7f2acb578"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["********** MÉDIAS AMOSTRAIS ***********\n","Idade média amostral: 62.70337369999949\n","Duração média amostral: 1732.076317334862\n","Altura média amostral: 169.5192334209984\n"]}]},{"cell_type":"markdown","source":["As médias amostrais estão muito próximas das médias das distribuições originais. Vamos entender como as médias das amostras se distribuem?"],"metadata":{"id":"ye4sRt6Nl2ZI"}},{"cell_type":"code","source":["#varias distribuicoes\n","plt.subplots(figsize = (20,5))\n","plt.subplot(131)\n","plt.title(\"Distribuição das médias amostrais de idade de aposentadoria\")\n","plt.xlabel(\"Média de idade de aposentadoria\")\n","plt.ylabel(\"Frequência\")\n","plt.hist(media_idade, bins=30, color = \"blue\", alpha = 0.7)\n","\n","plt.subplot(132)\n","plt.hist(media_duracao, bins=30, alpha=0.7, color=\"purple\")\n","plt.title(\"Distribuição da médias amostrais de tempo de vida da lâmpada\")\n","plt.xlabel(\"Média de tempo de vida da lâmpada (horas)\")\n","plt.ylabel(\"Frequência\")\n","\n","plt.subplot(133)\n","plt.hist(media_altura, bins=30, alpha=0.7, color=\"green\")\n","plt.title(\"Distribuição das médias amostrais das alturas\")\n","plt.xlabel(\"Média das alturas (cm)\")\n","plt.ylabel(\"Frequência\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":527},"id":"jAaUd17RkX8W","executionInfo":{"status":"ok","timestamp":1722123896454,"user_tz":180,"elapsed":1706,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"25c85d9b-af6d-4a59-b2df-29715529ed53"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-13-f7ebc469849c>:3: MatplotlibDeprecationWarning: Auto-removal of overlapping axes is deprecated since 3.6 and will be removed two minor releases later; explicitly call ax.remove() as needed.\n","  plt.subplot(131)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# **Analisando a Confiânça**\n","A indústria de lâmpadas nos contratou! E uma nova verificação nas lâmpadas foi realizada, coletando a duração de outras lâmpadas, já sabemos que podemos inferir e tirar conclusões a partir dessa amostra. Nos informaram que a duração média desse novo experimento foi de **1200 horas**"],"metadata":{"id":"BRUyoyRPn9_m"}},{"cell_type":"code","source":["# média da nova amostra\n","media_nova_amostra = 1200"],"metadata":{"id":"kvry82qSmxIC","executionInfo":{"status":"ok","timestamp":1722123896454,"user_tz":180,"elapsed":5,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# média original\n","dados_vida_lampada[\"duracao\"].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mWsRJPDJotog","executionInfo":{"status":"ok","timestamp":1722123896454,"user_tz":180,"elapsed":4,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"bf06e644-b43d-45ab-ec61-e0497a858e7c"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1731.8036029420002"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Quão distante essa média está do comportamento?\n","\n","plt.hist(media_duracao, bins=30, alpha=0.7, color=\"purple\")\n","plt.title(\"Distribuição das médias amostrais de tempo de vida da lâmpada\")\n","plt.xlabel(\"Média de tempo de vida da lâmpada (horas)\")\n","plt.annotate(\".\", xy=(media_nova_amostra, 0), xytext=(media_nova_amostra, 200), fontsize=8,\n","             arrowprops=dict(facecolor=\"green\"))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"A00-wW-lpXOw","executionInfo":{"status":"ok","timestamp":1722123897062,"user_tz":180,"elapsed":611,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"971d5446-6aaa-47e5-a523-42ec123cae78"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Para o experimento anterior do TLC, sabemos que uma lâmpada dura em média 1732 horas. Quando nos deparamos com o resultado desse novo expermimento, vimos que a média de duração das lâmpadas, 1200 horas, está bem menor que a esperada. A sua intuição te faz questionar:\n","\n","\n","*   Esses dados estão corretos?\n","*   Estamos lidando com o mesmo tipo de lâmpadas?\n","*   Se tudo for verdade, então parece que as lâmpadas da fábrica precisam passar pelo controle de qualidade de seus materiais\n","\n","Mas antes de informar sua intuição, outra pergunta fica no ar: **o quão confiante eu posso pedir para verificarem a qualidade das lâmpadas?** Para responder essa pergunta precisamos entender o quão distante a média dessa nova amostra está da amostra populacional. E, para isso, voltamos ao experimento das médias amostrais\n","\n"],"metadata":{"id":"REGSdSKSPH8u"}},{"cell_type":"markdown","source":["# Distribuição Normal\n","Na distribuição normal, as médias amostrais geralmente se aproximam da média verdadeira. No entanto, a média pode variar entre amostras. O conceito de erro padrão ajuda a entender essa variação sem a necessidade de visualizar um gráfico"],"metadata":{"id":"SpcT7NQ-S5CU"}},{"cell_type":"code","source":["# transformando medias_duracao em um DataFrame\n","duracao_amostras = pd.DataFrame({\"medias_duracao\" : media_duracao})\n","duracao_amostras"],"metadata":{"id":"UpD8gcl2qJyE","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1722123897062,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"5d08c0a0-3e19-40f3-945f-cd853d4ad73c"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       medias_duracao\n","0         1758.312095\n","1         1568.426910\n","2         1607.286218\n","3         1787.635403\n","4         1725.162598\n","...               ...\n","99995     1854.062651\n","99996     1793.675148\n","99997     1788.245715\n","99998     1724.554890\n","99999     1676.680723\n","\n","[100000 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-525cb41a-2fff-454f-95db-b86fdd465039\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>medias_duracao</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1758.312095</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1568.426910</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1607.286218</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1787.635403</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1725.162598</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>1854.062651</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>1793.675148</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>1788.245715</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>1724.554890</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>1676.680723</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-525cb41a-2fff-454f-95db-b86fdd465039')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-525cb41a-2fff-454f-95db-b86fdd465039 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-525cb41a-2fff-454f-95db-b86fdd465039');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25c70b84-3772-4b74-9fd3-521faaac0dca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25c70b84-3772-4b74-9fd3-521faaac0dca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25c70b84-3772-4b74-9fd3-521faaac0dca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6b994c9b-304f-4724-ac51-c704bd53b9d7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('duracao_amostras')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6b994c9b-304f-4724-ac51-c704bd53b9d7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('duracao_amostras');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"duracao_amostras","summary":"{\n  \"name\": \"duracao_amostras\",\n  \"rows\": 100000,\n  \"fields\": [\n    {\n      \"column\": \"medias_duracao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 118.47800574408252,\n        \"min\": 1166.68431245,\n        \"max\": 2255.8025411,\n        \"num_unique_values\": 100000,\n        \"samples\": [\n          1551.4760897500005,\n          1647.0124910399995,\n          1970.73310722\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# calculando informações\n","\n","media_das_medias = duracao_amostras.medias_duracao.mean()\n","EP = duracao_amostras.medias_duracao.std()\n","\n","print(\"********** MEDIDAS AMOSTRAIS ***********\")\n","print(f\"Média das médias amostrais: {media_das_medias}\")\n","print(f\"Erro padrão das médias amostrais: {EP}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gNXqU490Tn4L","executionInfo":{"status":"ok","timestamp":1722123897062,"user_tz":180,"elapsed":6,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"a5ada4b1-8df0-455a-fe9f-6ae71f080649"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["********** MEDIDAS AMOSTRAIS ***********\n","Média das médias amostrais: 1732.0763173348528\n","Erro padrão das médias amostrais: 118.47800574408252\n"]}]},{"cell_type":"code","source":["# Quantos erros padrão?\n","\n","abs(media_nova_amostra - media_das_medias)/EP # --> 4.5 erros padrao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3J2omBMWUXMA","executionInfo":{"status":"ok","timestamp":1722123897062,"user_tz":180,"elapsed":5,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"4f841612-642d-4c07-f68f-654bb4881254"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.490929046224495"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Visualizando a quantidade de amostras entre 3EP +- da média\n","\n","plt.hist(media_duracao, bins=30, alpha=0.7, color=\"purple\")\n","plt.title(\"Distribuição das médias amostrais de tempo de vida da lâmpada\")\n","plt.xlabel(\"Média de tempo de vida da lâmpada (horas)\")\n","plt.axvline(media_das_medias, color = \"yellow\")\n","plt.axvline(media_das_medias + 3*EP, color = \"green\")\n","plt.axvline(media_das_medias - 3*EP, color = \"green\")\n","plt.annotate(\".\", xy=(media_nova_amostra, 0), xytext=(media_nova_amostra, 200), fontsize=8,\n","             arrowprops=dict(facecolor=\"green\"))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":473},"id":"lxI7TUtXWdpO","executionInfo":{"status":"ok","timestamp":1722123897606,"user_tz":180,"elapsed":548,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"503ae91f-ee07-431a-feae-9b9ff0640b8d"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# quanto está no intervalo de +- dois desvios\n","qnt_obs = duracao_amostras[(duracao_amostras[\"medias_duracao\"] > media_das_medias - 3*EP) &\n","                 (duracao_amostras[\"medias_duracao\"] < media_das_medias + 3*EP)]"],"metadata":{"id":"D6K48VEIW0s9","executionInfo":{"status":"ok","timestamp":1722123897606,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# quanto isso representa?\n","qnt_obs.count()/duracao_amostras.count() * 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4bzumZ4jvWwi","executionInfo":{"status":"ok","timestamp":1722123897606,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"6a590f4e-ce74-4d17-c00a-cc97106220c9"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["medias_duracao    99.677\n","dtype: float64"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["Isso indica que se os dados estão corretos e estamos falando do mesmo tipo de lâmpadas, podemos informar ao controle de qualidade a verificação à um nível de confiança de 99.7%"],"metadata":{"id":"1Qzg29DgwTia"}},{"cell_type":"markdown","source":["PADRAO DA DISTRIBUIÇÃO NORMAL:\n","\n","no intervalo [media - 1*ep; media + 1*ep] -> 68% das amostras\n","\n","no intervalo [media - 2*ep; media + 2*ep] -> 95% das amostras\n","\n","no intervalo [media - 3*ep; media + 3*ep] -> 99.7% das amostras"],"metadata":{"id":"ApzAaU85wsrt"}},{"cell_type":"markdown","source":["# **PARA SABER MAIS: DESVIO E ERRO PADRÃO**"],"metadata":{"id":"HdjBlfWUybpN"}},{"cell_type":"markdown","source":["CALCULANDO DESVIO PADRAO COM PYTHON"],"metadata":{"id":"a91L93af0ThI"}},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"2yaHvv3bwRrB","executionInfo":{"status":"ok","timestamp":1722123898584,"user_tz":180,"elapsed":980,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["amostra_10_pesos = pd.DataFrame({\"Peso das barras de chocolate (g)\" : [99.4197, 101.821, 98.5708, 100.63, 94.7449, 99.3241, 97.6067, 100.679, 108.739, 99.0544]})\n","dp = amostra_10_pesos[\"Peso das barras de chocolate (g)\"].std()\n","\n","sns.kdeplot(amostra_10_pesos[\"Peso das barras de chocolate (g)\"], lw=2, fill=True, label=f\"Desvio padrão = {dp: .3f}\") ### KDE plot para plot de distribuições\n","plt.legend()\n","\n","plt.ylabel(\"Frequência\")\n","plt.title(\"Distribuição suave pesos de barra amostrais\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"Hkin48F5ywqw","executionInfo":{"status":"ok","timestamp":1722123899348,"user_tz":180,"elapsed":766,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"b477c030-11c7-4600-e19a-8b063420bd4e"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["CALCULANDO ERRO PADRAO COM PYTHON"],"metadata":{"id":"aMIyCMF10YJQ"}},{"cell_type":"code","source":["# desvio padrao\n","dp_amostral = amostra_10_pesos[\"Peso das barras de chocolate (g)\"].std()\n","\n","# tamanho da amostra\n","tamanho_amostra = len(amostra_10_pesos)\n","\n","# Calculando o Erro Padrão da Amostra\n","erro_padrao_amostral = dp_amostral / np.sqrt(tamanho_amostra)\n","\n","print(f\"Erro padrão amostral: {erro_padrao_amostral: .3f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QCv1lN_fz8Sp","executionInfo":{"status":"ok","timestamp":1722123899348,"user_tz":180,"elapsed":10,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"7005996d-0b79-492c-bfd8-fbef70f44145"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Erro padrão amostral:  1.143\n"]}]},{"cell_type":"markdown","source":["um modo mais direto para obter esse valor é utilizar a função stats.sem da biblioteca scipy"],"metadata":{"id":"-jQoMeeY0291"}},{"cell_type":"code","source":["## Calculando o erro padrão da amostra\n","from scipy import stats\n","\n","erro_padrao_amostral = stats.sem(amostra_10_pesos[\"Peso das barras de chocolate (g)\"])\n","\n","print(f\"Erro padrão amostral: {erro_padrao_amostral: .3f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1R7PlZ-U0zpP","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":10,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"15e09d8d-bc41-4fc1-b764-b8ea5d3189ab"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Erro padrão amostral:  1.143\n"]}]},{"cell_type":"markdown","source":["DIFERENÇA ENTRE DESVIO PADRAO E ERRO PADRAO\n","\n","Em termos simples, enquanto o desvio padrão nos diz o quão espalhados estão os dados individuais, o erro padrão nos mostra o quão precisa é a média de uma amostra como estimativa da média da população. Em termos técnicos, o desvio padrão é a medida de variabilidade individual dos dados e o erro padrão é a medida de variabilidade associada à média amostral. Portanto, podemos resumir que o desvio padrão é sobre dados individuais, enquanto o erro padrão diz respeito à confiabilidade da média de uma amostra."],"metadata":{"id":"FD3lrbt71LI-"}},{"cell_type":"markdown","source":["# **INTERVALO DE CONFIANÇA**"],"metadata":{"id":"ilzEzI-18DPi"}},{"cell_type":"markdown","source":["Para estabelecer um intervalo que contenha a verdadeira duração média das lâmpadas, vamos levar em consideração 3 aspectos:\n","\n","\n","*   A duração média\n","*   O nível de confianca\n","*   A variabilidade dos meus dados\n","\n","Nesse intervalo adicionaremos uma margem de erro na média, contendo então o nível de confiança e a variabilidade dos dados.\n","\n","Aqui no python, vamos importar a biblioteca que vai nos ajudar a realizar os cálculos\n","\n"],"metadata":{"id":"w5_Ho6k08HrI"}},{"cell_type":"code","source":["# importando o stats\n","from scipy import stats"],"metadata":{"id":"xlWuo7w31IDJ","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["\n","# levar em consideração essa amostra\n","dados_vida_lampada\n","\n","# nivel de confiança definido\n","confianca = 0.95"],"metadata":{"id":"tk22Hsee-UJi","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["Podemos estabelecer o nível de confiança de 0.95. Isso quer dizer, segundo o TCL, que para 95 amostras de 100 a média da amostra estará dentro de dois EP da média real. O nível de confiança é um critério que deve ser estabelecido junto aos tomadores de decisão, uma vez que está relacionado ao erro e a restrição desse intervalo."],"metadata":{"id":"vl3_7WEp_aJT"}},{"cell_type":"code","source":["# informaçoes para o IC\n","\n","media = dados_vida_lampada.duracao.mean()\n","desvio_padrao = dados_vida_lampada.duracao.std()\n","tamanho_amostra = len(dados_vida_lampada)"],"metadata":{"id":"slrhm1Iw_TUD","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["# calculando o IC\n","\n","intervalo_confianca = stats.norm.interval(confianca, loc=media, scale=desvio_padrao/np.sqrt(tamanho_amostra))"],"metadata":{"id":"Bz4aIf1eA6s4","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["# visualizando os resultados\n","\n","print(\"IC (95%):\", intervalo_confianca)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zhLuJ9uEBUZ0","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"a6c9fc99-c5e6-4b97-af38-8fded28d53d8"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["IC (95%): (1658.3741665835487, 1805.2330393004518)\n"]}]},{"cell_type":"markdown","source":["Esse resultado nos diz que com 95% de confiança a verdadeira média de duração das lâmpadas está contida no ic"],"metadata":{"id":"q9qSI8oFC6ia"}},{"cell_type":"markdown","source":["# **PRÁTICA DA AULA 1**"],"metadata":{"id":"BjGRnpbCE5ox"}},{"cell_type":"markdown","source":["**Caso TechTaste**\n","\n","Você faz parte de uma empresa de consultoria. Atualmente, seu cliente é um restaurante de delivery chamado TechTaste. Nele, foi introduzido um novo estilo de atendimento ao cliente - agora com um chat de inteligência artificial. Para avaliar a eficácia da IA, foram coletadas várias avaliações de clientes que tiveram contato com o novo chat da TechTaste. Uma amostra com 80 avaliações foi separada para a análise. As notas foram dadas dentro de um intervalo de 0 a 100."],"metadata":{"id":"CK_X1OXDFBqR"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# Conjunto de dados TechTaste\n","df_techtaste = pd.DataFrame({'avaliacoes': [38, 44, 33, 42, 47, 33, 36, 39, 42, 36, 39, 34, 42, 42, 36, 43, 31, 35, 36, 41, 42, 30, 25, 38, 47, 36, 32, 45, 44, 45, 37, 48, 37, 36, 44, 49, 31, 45, 45, 40, 36, 50, 38, 34, 36, 42, 46, 49, 36, 34, 38, 31, 53, 40, 57, 40, 36, 42, 26, 50, 32, 43, 35, 37, 42, 30, 36, 43, 40, 43, 44, 52, 37, 51, 35, 47, 40, 50, 37, 49]})\n","df_techtaste"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"OMdrzZJqBpuQ","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":6,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"b84628fd-f2a6-40b1-c870-1e1a4c9fdf87"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    avaliacoes\n","0           38\n","1           44\n","2           33\n","3           42\n","4           47\n","..         ...\n","75          47\n","76          40\n","77          50\n","78          37\n","79          49\n","\n","[80 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-5697bf78-7ca8-4951-835b-f7a6233c8c10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>avaliacoes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>80 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5697bf78-7ca8-4951-835b-f7a6233c8c10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5697bf78-7ca8-4951-835b-f7a6233c8c10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5697bf78-7ca8-4951-835b-f7a6233c8c10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f74a48a6-9afd-4288-a153-3615bfe4705c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f74a48a6-9afd-4288-a153-3615bfe4705c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f74a48a6-9afd-4288-a153-3615bfe4705c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_eabc6698-e70a-4dc6-8287-7387acd8aea8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_techtaste')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_eabc6698-e70a-4dc6-8287-7387acd8aea8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_techtaste');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_techtaste","summary":"{\n  \"name\": \"df_techtaste\",\n  \"rows\": 80,\n  \"fields\": [\n    {\n      \"column\": \"avaliacoes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 25,\n        \"max\": 57,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          43,\n          25,\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["1. Desvio padrão amostral das avaliações"],"metadata":{"id":"0HlkUh4uFMRL"}},{"cell_type":"code","source":["dp_techtaste = df_techtaste.avaliacoes.std()\n","\n","print(f\"O desvio padrão amostral das avaliações é de {dp_techtaste:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ceDrid2FHt0","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":6,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"bf9b0866-b12b-488c-9ad7-7c0ee6c0534e"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["O desvio padrão amostral das avaliações é de 6.42\n"]}]},{"cell_type":"markdown","source":["2. Erro padrão amostral das avaliações"],"metadata":{"id":"CHF2avVjFzBI"}},{"cell_type":"code","source":["ep_techtaste = dp_techtaste / np.sqrt(len(df_techtaste))\n","\n","print(f\"O erro padrão amostral das avaliações é de {ep_techtaste:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A5agartHFnVf","executionInfo":{"status":"ok","timestamp":1722123899349,"user_tz":180,"elapsed":5,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"0659c4d8-cc82-489c-8bea-27e252f33761"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["O erro padrão amostral das avaliações é de 0.72\n"]}]},{"cell_type":"markdown","source":["3. Utilizando um gráfico de histograma, analise visualmente a distribuição das avaliações dos clientes."],"metadata":{"id":"uh3w62LUF-iW"}},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(12, 6))\n","ax.hist(df_techtaste.avaliacoes, bins=15, color=\"skyblue\")\n","ax.set_title(\"Distribuição das avaliações dos clientes\", fontsize=18, loc=\"left\")\n","ax.set_xlabel(\"Avaliações\", fontsize=14)\n","ax.set_ylabel(\"Frequência\", fontsize=14)\n","ax.xaxis.set_tick_params(labelsize=14)\n","ax.yaxis.set_tick_params(labelsize=14)\n","ax.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"o62qX6uVF605","executionInfo":{"status":"ok","timestamp":1722123899947,"user_tz":180,"elapsed":603,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"0a08dffe-0e58-4c57-c4b4-97fa5a9eaeb9"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["4. IC de 90% para a média"],"metadata":{"id":"wtP1eD96OJzR"}},{"cell_type":"code","source":["IC_90 = stats.norm.interval(0.90, loc=df_techtaste.avaliacoes.mean(), scale=ep_techtaste)\n","IC_90"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VPpxT2NPGI65","executionInfo":{"status":"ok","timestamp":1722123899947,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"c19893de-7717-4a94-ea37-71051571d497"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(38.84402439920928, 41.205975600790715)"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["largura_IC_90 = IC_90[1] - IC_90[0]\n","largura_IC_90"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UxCw4wr3OrdZ","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"be5d4833-089d-49f0-cfe8-a523b762a759"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.3619512015814337"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["IC_95 = stats.norm.interval(0.95, loc=df_techtaste.avaliacoes.mean(), scale=ep_techtaste)\n","IC_95"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qfPo8_KkPgcZ","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"9bc9c04a-0200-4cd4-d336-9db7572e1a88"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(38.617780776207844, 41.43221922379215)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["largura_IC_95 = IC_95[1] - IC_95[0]\n","largura_IC_95"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TFaQdowVPoEs","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"0efc596d-42fb-45a5-c9f1-bc1e48e3a597"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.8144384475843083"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":[],"metadata":{"id":"HrE2IeIxPtZ8","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":39,"outputs":[]},{"cell_type":"markdown","source":["# **TESTE PARA UMA AMOSTRA GRANDE**"],"metadata":{"id":"3x_IsSIHP7Sb"}},{"cell_type":"markdown","source":["FORMULANDO A HIPÓTESE"],"metadata":{"id":"KHfcfLq0SaG1"}},{"cell_type":"code","source":["# hipótese nula\n","hipotese = 1570"],"metadata":{"id":"YabW2MJtQAg_","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":40,"outputs":[]},{"cell_type":"markdown","source":["Estabelecidas as hipóteses,\n","\n","H_0 : mi = 1570\n","\n","H_1 : mi != 1570\n","\n","podemos identificar o critério para rejeitar ou não a hipótese estabelecida, mas antes vamos conhecer nossa região crítica, o critério de rejeição"],"metadata":{"id":"NadBUlUzSgKM"}},{"cell_type":"markdown","source":["ESTABELECENDO UMA REGRA DE DECISÃO\n","\n","Para tomar essa decisão e calcular a probabilidade de estarmos assumindo um erro, precisamos considerar uma regra de decisão, ou seja, entender quando vamos assumir que H0 é rejeitada.\n","\n","Para essa regra, podemos levar em consideração um conceito que ja vimos aqui, o IC, que estabelece uma margem de erro para a média a partir de um nível de confiança na variabilidade dos dados"],"metadata":{"id":"deIZNydLTEvV"}},{"cell_type":"code","source":["lampadas_natalinas = pd.read_csv(\"/content/drive/MyDrive/Bancos de Dados ALURA/DADOS_CURSO_3/experimento_lampadas_natalinas.csv\")\n","lampadas_natalinas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"UlIwFfigT1ud","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"dc9e44db-8c41-40ab-cbfd-d7bb3d3a6fe6"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Unnamed: 0      duracao\n","0            0  1541.121474\n","1            1  1523.495329\n","2            2  1521.732707\n","3            3  1523.280091\n","4            4  1530.643374\n","..         ...          ...\n","95          95  1523.112501\n","96          96  1528.213843\n","97          97  1513.689417\n","98          98  1532.400532\n","99          99  1534.091561\n","\n","[100 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-a57fcd89-c211-49b2-882d-f2eb1eeb9c96\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>duracao</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1541.121474</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1523.495329</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1521.732707</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1523.280091</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1530.643374</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>95</td>\n","      <td>1523.112501</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>96</td>\n","      <td>1528.213843</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>97</td>\n","      <td>1513.689417</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>98</td>\n","      <td>1532.400532</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>99</td>\n","      <td>1534.091561</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a57fcd89-c211-49b2-882d-f2eb1eeb9c96')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a57fcd89-c211-49b2-882d-f2eb1eeb9c96 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a57fcd89-c211-49b2-882d-f2eb1eeb9c96');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0918545e-462a-4598-b678-ceb15542e254\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0918545e-462a-4598-b678-ceb15542e254')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0918545e-462a-4598-b678-ceb15542e254 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7c3cdd31-a4da-4275-891f-5634349a8a51\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('lampadas_natalinas')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7c3cdd31-a4da-4275-891f-5634349a8a51 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('lampadas_natalinas');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"lampadas_natalinas","summary":"{\n  \"name\": \"lampadas_natalinas\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          83,\n          53,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duracao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.854016222707992,\n        \"min\": 1511.6210381617243,\n        \"max\": 1551.798841941055,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          1539.7719294102933,\n          1533.2240944803098,\n          1525.6844259720797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["# media amostral\n","lampadas_natalinas.duracao.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6xxV2sJhT6qF","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"8cafcd11-e307-4e63-fc2e-95231c614001"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1529.5081310675512"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["# informacoes para a regiao critica\n","\n","confianca = 0.95\n","desvio_padrao_natalinas = lampadas_natalinas.duracao.std()\n","tamanho_da_amostra = len(lampadas_natalinas)"],"metadata":{"id":"sGF2uYcqUMbr","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":6,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["# calculando o IC\n","intervalo = stats.norm.interval(confianca, loc=lampadas_natalinas.duracao.mean(), scale=desvio_padrao_natalinas/np.sqrt(tamanho_da_amostra))\n","print(\"Intervalo de Confiança de 95%:\", intervalo)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EZmTnV5OUi4s","executionInfo":{"status":"ok","timestamp":1722123899948,"user_tz":180,"elapsed":5,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"d3be49e8-d5f6-4961-eaad-db3bf69deec2"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Intervalo de Confiança de 95%: (1527.7727757760472, 1531.2434863590552)\n"]}]},{"cell_type":"markdown","source":["Esse é o intervalo de confiança, estabelecido pela amostra à 95% de confiança sob H0\n","\n","Comparando a média amostral percebemos que não está contida na região de aceitação. Ou seja, não podemos dizer que a duração média das lâmpadas é de 1570 horas à 95% de confiança"],"metadata":{"id":"78VlW1r2VHr9"}},{"cell_type":"markdown","source":["# PARA SABER MAIS: ERROS DO TIPO 1 E TIPO 2"],"metadata":{"id":"0FsfoxaHXsTk"}},{"cell_type":"markdown","source":["**Erro do tipo 1:** ocorre quando a hipótese nula é rejeitada quando, na verdade, ela é verdadeira. Em outras palavras, o erro é cometido ao rejeitar uma verdade.\n","\n","**Erro do tipo 2:** ocorre quando a hipótese nula não é rejeitada quando, na verdade, ela é falsa. Em outras palavras, o erro é cometido ao não rejeitar uma falsidade.\n","\n","\n","\n","\n"],"metadata":{"id":"RzoDdJKnXzsa"}},{"cell_type":"markdown","source":["# **FAZENDO TESTE DE HIPOTESE AGORA COM PROBABILIDADE**"],"metadata":{"id":"jt65B5oQZz1H"}},{"cell_type":"code","source":["# importando o teste z do statsmodels\n","from statsmodels.stats.weightstats import ztest"],"metadata":{"id":"BUDN_11BaNLu","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":492,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["# executando o teste z\n","stats, p_valor = ztest(x1 = lampadas_natalinas.duracao, value=1570, alternative=\"two-sided\")"],"metadata":{"id":"LX4yisOxaf5_","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":15,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["# media amostral\n","lampadas_natalinas.duracao.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6MN_bA5Pa_4Q","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":14,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"e589aaa7-6028-4b48-cc5a-254fefd7cb25"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1529.5081310675512"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["# exibindo os resultados\n","print(\"Estatística Z:\", stats)\n","print(f\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UhYRgoVbbGIz","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":14,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"014cee50-995b-4079-c506-0c17f79414ec"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística Z: -45.732770207263556\n","p-valor: 0.0\n"]}]},{"cell_type":"code","source":["# verifica a hipótese nula com base no p-valor\n","\n","if p_valor < 0.05:\n","  print(\"Hipótese nula rejeitada\")\n","else:\n","  print(\"Hipótese nula não rejeitada\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"34QJ6hbtbcUT","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":13,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"5180fae8-c54e-40ac-82d7-15d852aa1629"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Hipótese nula rejeitada\n"]}]},{"cell_type":"markdown","source":["# PARA SABER MAIS: TESTE Z"],"metadata":{"id":"6WXszep1jAgY"}},{"cell_type":"markdown","source":["Durante as aulas utilizamos o Teste Z para fazer inferências sobre a média do nosso problema. Vamos expandir ainda mais nossos estudos sobre esse teste?\n","\n","O teste Z é usado para testar hipóteses quando você tem condições específicas que justificam seu uso. Ele é especialmente aplicável em situações onde:\n","\n","* Tamanho da amostra é grande: Geralmente, o teste Z é usado quando o tamanho da amostra (n) é maior que 30. Isso se deve ao Teorema Central do Limite, que afirma que, para tamanhos de amostra suficientemente grandes, a distribuição das médias amostrais tende a ser normal, independentemente da forma da distribuição populacional.\n","* Desvio padrão populacional é conhecido: Para aplicar o teste Z, você precisa conhecer o desvio padrão da população (σ). Isso raramente acontece na prática, mas quando conhecido, permite o uso do teste Z para avaliar diferenças entre médias ou proporções.\n","* A amostra é aleatória e as observações são independentes: Isso garante que os dados não sejam enviesados e que o modelo estatístico aplicado seja válido."],"metadata":{"id":"23RbwyJ4jDJM"}},{"cell_type":"markdown","source":["# **PRÁTICA 2**"],"metadata":{"id":"fX-1P3c1kDSq"}},{"cell_type":"markdown","source":["1. Média amostral"],"metadata":{"id":"xK0r4lL9kITE"}},{"cell_type":"code","source":["media = df_techtaste.avaliacoes.mean()\n","media"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MlkLpz3JcA1D","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":12,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"cc7c97e5-2550-4ded-c90c-954d2abe6dc2"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["40.025"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["2. Formular hipóteses para o problema da empresa:\n","\n","H0: mi = 30\n","\n","H1: mi != 30"],"metadata":{"id":"lmngQB-bkf4V"}},{"cell_type":"code","source":["media_h0 = 30"],"metadata":{"id":"E2UJm9SEl4a7","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":11,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":51,"outputs":[]},{"cell_type":"markdown","source":["3. IC da hipotese Nula"],"metadata":{"id":"Gm-aK2hZk42x"}},{"cell_type":"code","source":["from scipy import stats\n","ic_95 = stats.norm.interval(0.95, loc=media_h0, scale= (2.65/np.sqrt(80)))\n","ic_95"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R1bY6wmPkO19","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":11,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"944c31ea-ba39-4ee0-8b58-dccf71ae0878"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(29.419303816868016, 30.580696183131984)"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["4. O que é possível entender a partir do resultado da etapa anterior?\n","\n","Como a média amostral está fora do intervalo de confiança da hipótese nula, temos uma evidência para rejeitar a hipótese nula.\n","\n"],"metadata":{"id":"VrPEAvycl-qd"}},{"cell_type":"markdown","source":["5. FAZER TESTE Z"],"metadata":{"id":"IH0-TX-omN2v"}},{"cell_type":"code","source":["testeZ, p_value = ztest(x1 = df_techtaste.avaliacoes, value=media_h0, alternative=\"two-sided\")\n","print(\"Estatística Z:\", testeZ)\n","print(f\"p-valor:\", p_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IcE5G8SflBwe","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":11,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"afe509dd-bfe0-4a3b-99f7-04fc82fbb0a6"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística Z: 13.96274198988354\n","p-valor: 2.6311293593122384e-44\n"]}]},{"cell_type":"code","source":["if p_value < 0.05:\n","  print(\"Hipótese nula rejeitada\")\n","else:\n","  print(\"Hipótese nula não rejeitada\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nEabOI9HmLLO","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":11,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"e8545e3a-4939-4dfa-9995-67ba2da676af"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Hipótese nula rejeitada\n"]}]},{"cell_type":"markdown","source":["# **TESTE PARA AMOSTRAS PEQUENAS**"],"metadata":{"id":"E-hZCzobmm-b"}},{"cell_type":"markdown","source":["**CASO 2:** Uma empresa de software está interessada em verificar se o tempo médio de resposta do seu suporte técnico é **menor que 30 minutos**, como prometido no acordo de nível de serviço (SLA). Eles coletam dados sobre o tempo de resposta para uma amostra de 25 solicitações de suporte"],"metadata":{"id":"FY_-ZcgLvW4V"}},{"cell_type":"code","source":["# tempo de resposta em minutos para 25 solicitacoes de suporte\n","tempo_resposta = pd.DataFrame({\"tempo_resposta\": [28,32,29,31,30,33,28,30,31,29,\n","                                                  30,32,29,31,30,33,28,30,31,29,\n","                                                  30,32,24,29,30]})\n","tempo_resposta"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":833},"id":"eSnuZBMbmaYu","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":10,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"98ded4da-b381-4ef9-a743-5e83cbb11679"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    tempo_resposta\n","0               28\n","1               32\n","2               29\n","3               31\n","4               30\n","5               33\n","6               28\n","7               30\n","8               31\n","9               29\n","10              30\n","11              32\n","12              29\n","13              31\n","14              30\n","15              33\n","16              28\n","17              30\n","18              31\n","19              29\n","20              30\n","21              32\n","22              24\n","23              29\n","24              30"],"text/html":["\n","  <div id=\"df-9d5f6eb4-348c-49f3-93ce-a7f7cd60d710\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tempo_resposta</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d5f6eb4-348c-49f3-93ce-a7f7cd60d710')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d5f6eb4-348c-49f3-93ce-a7f7cd60d710 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d5f6eb4-348c-49f3-93ce-a7f7cd60d710');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-871a104d-7542-4378-8208-227c4f695399\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-871a104d-7542-4378-8208-227c4f695399')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-871a104d-7542-4378-8208-227c4f695399 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6a149932-f4b5-492f-8bc4-d78b55c4f8ee\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tempo_resposta')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6a149932-f4b5-492f-8bc4-d78b55c4f8ee button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tempo_resposta');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tempo_resposta","summary":"{\n  \"name\": \"tempo_resposta\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"tempo_resposta\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 24,\n        \"max\": 33,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          28,\n          32,\n          33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["Estabelecidas hipóteses:\n","\n","H0: mi=30\n","\n","H1: mi<30"],"metadata":{"id":"ZaYSkhcHwnyv"}},{"cell_type":"markdown","source":["Seguimos para o teste, e dessa vez nao temos informacoes sobre a populacao. Qual teste podemos seguir?"],"metadata":{"id":"gWCgNunqw0BS"}},{"cell_type":"markdown","source":["# **APLICANDO O TESTE T**"],"metadata":{"id":"Rpy87qpSw8MO"}},{"cell_type":"markdown","source":["Quando não temos informacoes sobre a variabilidade da nossa populacao, sobretudo quando nossa amostra é pequena, seguimos com um teste t, que segue o mesmo princípio do teste z"],"metadata":{"id":"2BBPm3hFxAhk"}},{"cell_type":"code","source":["#media coletada do tempo\n","tempo_resposta.tempo_resposta.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VGS8h7y5wl-X","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":10,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"f6d70f11-0ace-4149-ec26-4a0857d1f589"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["29.96"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["#importando ttest_1samp\n","from scipy.stats import ttest_1samp"],"metadata":{"id":"6-tbYHQXxR4I","executionInfo":{"status":"ok","timestamp":1722123900436,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["# realiza o teste t unilateral para uma amostra\n","estatistica_t, p_valor = ttest_1samp(tempo_resposta, 30, alternative=\"less\")"],"metadata":{"id":"LFq2Rfa3xpG4","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":10,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["# exibindo os resultados\n","print(\"Estatística T:\", estatistica_t)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KVvVF5ERx6At","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":10,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"d684e4af-d6ba-4275-e29c-7fe9222262f9"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística T: [-0.1050693]\n","p-valor: [0.45859701]\n"]}]},{"cell_type":"markdown","source":["# **PARA SABER MAIS: TESTE T**"],"metadata":{"id":"qogO7K09yLAg"}},{"cell_type":"markdown","source":["Também conhecido como \"Teste t de Student\" devido ao nome de seu criador, o Teste t é usado para testar hipóteses quando você tem condições específicas que justificam seu uso. Ele é particularmente aplicável em situações onde:\n","\n","* **Tamanho da amostra é pequeno:** Geralmente, o teste t é usado quando o tamanho da amostra (n) é menor que 30. Isso se deve à necessidade de compensar a incerteza adicional introduzida quando se estima a variância da população a partir de uma pequena amostra\n","\n","* **Desvio padrão populacional é desconhecido:** Diferentemente do teste Z, o teste t é utilizado quando o desvio padrão da população não é conhecido e precisa ser estimado a partir dos dados da amostra. Essa é uma situação comum na prática, pois raramente se conhece o desvio padrão da população.\n","\n","* **A amostra é aleatória e as observações independentes:** Assim como no teste Z, é importante que a amostra seja aleatória e que as observações dentro da amostra sejam independentes umas das outras para garantir a validade do teste\n","\n","* **A distribuição da população é aproximadamente normal ou o tamanho da amostra é suficientemente grande:** Embora o teste t seja robusto para pequenos desvios da normalidade, especialmente à medida que o tamanho da amostra aumenta, ele se baseia na suposição de que os dados seguem uma distribuição normal. Para amostras muito pequenas, essa suposição torna-se mais crítica.\n","\n","Ao todo existem três tipos de teste t:\n","\n","* **Teste t para uma amostra:** é usado para testar a hipótese sobre o valor da média amostral.\n","\n","* **Teste t para duas amostras independentes:** permite testar a hipótese sobre a diferença entre as médias de duas amostras independentes\n","\n","* **Teste t para duas amostras pareadas (ou amostras relacionadas):** é usado para investigar a hipótese sobre a média de uma amostra testada duas vezes"],"metadata":{"id":"zGguVlipyTZ9"}},{"cell_type":"markdown","source":["# **PRÁTICA 3**"],"metadata":{"id":"vssx7Cq12dqE"}},{"cell_type":"code","source":["\n","df_techsafe = pd.DataFrame({\"porcentagem_compressao\": [21.99342831, 20.7234714, 22.29537708, 24.04605971, 20.53169325, 20.53172609, 24.15842563, 22.53486946, 20.06105123, 22.08512009, 20.07316461, 20.06854049, 21.48392454, 17.17343951, 17.55016433, 19.87542494, 18.97433776, 21.62849467, 19.18395185, 18.1753926, 23.93129754, 20.5484474, 21.13505641, 18.15050363, 19.91123455]})\n","df_techsafe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"x3Yv6dz5x90j","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"98adbdd0-736e-43d3-f0c6-ee8da41656e0"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    porcentagem_compressao\n","0                21.993428\n","1                20.723471\n","2                22.295377\n","3                24.046060\n","4                20.531693\n","5                20.531726\n","6                24.158426\n","7                22.534869\n","8                20.061051\n","9                22.085120\n","10               20.073165\n","11               20.068540\n","12               21.483925\n","13               17.173440\n","14               17.550164\n","15               19.875425\n","16               18.974338\n","17               21.628495\n","18               19.183952\n","19               18.175393\n","20               23.931298\n","21               20.548447\n","22               21.135056\n","23               18.150504\n","24               19.911235"],"text/html":["\n","  <div id=\"df-4ac30b29-3d84-4473-a2d7-04c7dcc4d15c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>porcentagem_compressao</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>21.993428</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.723471</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>22.295377</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24.046060</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.531693</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>20.531726</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>24.158426</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>22.534869</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>20.061051</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>22.085120</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>20.073165</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>20.068540</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>21.483925</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>17.173440</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>17.550164</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>19.875425</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>18.974338</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>21.628495</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19.183952</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>18.175393</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>23.931298</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>20.548447</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>21.135056</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>18.150504</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>19.911235</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ac30b29-3d84-4473-a2d7-04c7dcc4d15c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ac30b29-3d84-4473-a2d7-04c7dcc4d15c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ac30b29-3d84-4473-a2d7-04c7dcc4d15c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7b49409d-7bb1-4fe2-baa5-38bb9f3c4fcb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b49409d-7bb1-4fe2-baa5-38bb9f3c4fcb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7b49409d-7bb1-4fe2-baa5-38bb9f3c4fcb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f000c89c-a6ab-4135-b7d0-616e2f6495e9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_techsafe')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f000c89c-a6ab-4135-b7d0-616e2f6495e9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_techsafe');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_techsafe","summary":"{\n  \"name\": \"df_techsafe\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"porcentagem_compressao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9131061090692592,\n        \"min\": 17.17343951,\n        \"max\": 24.15842563,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20.06105123,\n          18.97433776,\n          21.99342831\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["Hipoteses:\n","\n","H0: mi = 20\n","\n","H1: mi > 20"],"metadata":{"id":"YF14kji13z0w"}},{"cell_type":"code","source":["media_pop = 20"],"metadata":{"id":"PKj3oDRk3hLj","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["media_amostral = df_techsafe.porcentagem_compressao.mean()\n","media_amostral"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2xMQxWIB38sJ","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":9,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"e3820df3-79e8-42ee-a207-bf586a0f4606"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["20.6729838832"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["alpha = 0.05\n","confianca = 0.95"],"metadata":{"id":"9N07qqoB4Cuq","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["estat_t, p_valor = ttest_1samp(df_techsafe.porcentagem_compressao, 20, alternative=\"greater\")"],"metadata":{"id":"4AL_PjvD4TNL","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["print(\"Estatística T:\", estatistica_t)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bn2h194N4bSk","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"f6674d7b-4b15-49ec-8b0b-f62fafa55643"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística T: [-0.1050693]\n","p-valor: 0.04567200091129674\n"]}]},{"cell_type":"code","source":["##REJEITO A HIPOTESE NULA E ACEITO A HIPOTESE ALTERNATIVA!"],"metadata":{"id":"7OFSsHhG4c91","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":8,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":66,"outputs":[]},{"cell_type":"markdown","source":["# **AMOSTRAS INDEPENDENTES**\n","Caso 5: estamos prestando consultoria para uma empresa de e-commerce, e no meio de uma reunião surge uma hipótese: \"A propaganda produz efeito positivo nas vendas\". Podemos inserir mais propagandas no site para aumentar as vendas?"],"metadata":{"id":"vwKlBqBO5JvK"}},{"cell_type":"code","source":["vendas_com_propaganda = [329.80, 291.70, 338.86, 391.38,\n","                         285.95, 285.95, 394.75, 346.05,\n","                         271.83, 332.55, 272.19, 272.06,\n","                         314.52, 185.20, 196.50, 266.26,\n","                         239.23, 318.85, 245.52, 215.26,\n","                         387.94, 286.45, 304.05, 214.52,\n","                         267.34, 306.66, 230.94, 322.54,\n","                         263.96, 282.50, 263.90, 411.14,\n","                         299.19, 236.54, 349.35, 226.75,\n","                         312.53, 182.42, 220.31, 311.81,\n","                         344.31, 310.28, 293.06, 281.93,\n","                         211.29, 256.81, 272.36, 363.43,\n","                         320.62, 194.22]"],"metadata":{"id":"QoGqtpa-5esk","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["vendas_sem_propaganda = [304.44, 261.89, 244.38, 321.70,\n","                         346.96, 340.88, 234.65, 266.45,\n","                         304.88, 343.53, 256.25, 273.86,\n","                         218.62, 213.23, 333.75, 366.37,\n","                         280.68, 345.21, 306.70, 246.29,\n","                         306.68, 377.28, 282.85, 378.88,\n","                         127.82, 334.31, 290.22, 267.06,\n","                         290.51, 165.74, 271.82, 306.43,\n","                         373.67, 253.90, 236.49, 254.89,\n","                         339.92, 304.73, 253.21, 315.80,\n","                         290.82, 343.12, 242.88, 265.34,\n","                         261.47, 197.19, 302.77, 300.66,\n","                         285.31, 270.92]"],"metadata":{"id":"x0kv4_Gp6rCT","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["# média com\n","print(\"Média com propaganda:\", np.mean(vendas_com_propaganda))\n","\n","# média sem\n","print(\"Média sem propaganda:\", np.mean(vendas_sem_propaganda))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_cqPG5mS7wg1","executionInfo":{"status":"ok","timestamp":1722123900437,"user_tz":180,"elapsed":7,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"2ac9e467-d70d-4897-d330-69b7471293ec"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["Média com propaganda: 286.4712\n","Média sem propaganda: 286.0682\n"]}]},{"cell_type":"code","source":["# criar histogramas\n","plt.hist(vendas_com_propaganda, bins=10, alpha=0.5, label=\"Com propaganda\")\n","plt.hist(vendas_sem_propaganda, bins=10, alpha=0.5, label=\"Sem propaganda\")\n","plt.legend()\n","\n","# adicionar rotulos e titulo\n","plt.xlabel(\"Vendas\")\n","plt.ylabel(\"Frequência\")\n","plt.title(\"Histograma de vendas com e sem Propaganda\")\n","\n","# exibir o histograma\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"I1JRyFEy75Cw","executionInfo":{"status":"ok","timestamp":1722123900865,"user_tz":180,"elapsed":434,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"962c4d61-9761-4fe9-c688-d6d93cee4e85"},"execution_count":70,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Hipóteses desse teste de amostras independentes:\n","\n","H0: media sem = media com\n","\n","H1: media sem < media com"],"metadata":{"id":"LZcUoVr18qdg"}},{"cell_type":"code","source":["# teste t para amostras independentes (ttest_ind)\n","from scipy.stats import ttest_ind"],"metadata":{"id":"ANij7ekH8h8z","executionInfo":{"status":"ok","timestamp":1722123900865,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["# aplicação do teste t de Student para amostras independentes\n","estatistica_t, p_valor = ttest_ind(vendas_com_propaganda, vendas_sem_propaganda, alternative = \"greater\")"],"metadata":{"id":"gjCCqxXs87zs","executionInfo":{"status":"ok","timestamp":1722123900865,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["# exibição dos resultados\n","\n","print(\"Estatística T:\", estatistica_t)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oYaOeDN59Sli","executionInfo":{"status":"ok","timestamp":1722123900865,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"091cd790-5903-4b60-885d-8b4a1db978ac"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística T: 0.03712916794948108\n","p-valor: 0.48522877155131294\n"]}]},{"cell_type":"markdown","source":["# **PARA SABER MAIS: TESTE T INDEPENDENTE**"],"metadata":{"id":"eQV2RXUkngUP"}},{"cell_type":"markdown","source":["O teste t independente é utilizado para comparar as médias de duas populações distintas, baseando-se em amostras independentes de cada uma. Este teste é particularmente útil quando queremos avaliar se há uma diferença significativa entre os grupos em termos de alguma variável quantitativa. Ele é aplicável sob condições específicas:\n","\n","* **Tamanhos de amostra relativamente pequenos:** Embora não haja uma regra estrita para o tamanho máximo, o teste t é comumente usado para amostras com menos de 30 observações. Para amostras maiores, outros testes, como o teste Z, podem ser mais apropriados.\n","* **Desvios padrão populacionais desconhecidos:** O teste t independente é empregado quando os desvios padrão das duas populações que estão sendo comparadas não são conhecidos e precisam ser estimados a partir das amostras.\n","* **Amostras aleatórias e independentes:** As amostras devem ser coletadas aleatoriamente e uma observação de uma amostra não deve influenciar as observações da outra amostra.\n","* **Distribuição dos dados aproximadamente normal:** Para pequenas amostras, é importante que os dados de cada grupo sigam aproximadamente uma distribuição normal. Para amostras maiores, essa suposição torna-se menos crítica devido ao Teorema Central do Limite."],"metadata":{"id":"8MymW0zmnk4A"}},{"cell_type":"markdown","source":["# CASO 6\n","Programa de treinamento da equipe de atendimento ao cliente do e-commerce quer avaliar o impacto de um programa de treinamento em seu desempenho. A empresa coletou dados de avaliações de desempenho antes e depois do treinamento para os mesmos funcionários. Eles desejam determinar se há uma diferença significativa nas avaliações antes e depois do treinamento"],"metadata":{"id":"rJZ-VQq2pk5e"}},{"cell_type":"code","source":["antes_do_treinamento = [78, 65, 75, 80, 85, 88, 79, 81, 76, 84]\n","apos_o_treinamento = [85, 70, 75, 87, 90, 92, 84, 82, 76, 91]"],"metadata":{"id":"cSaLPdZhr_Qj","executionInfo":{"status":"ok","timestamp":1722125739470,"user_tz":180,"elapsed":284,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["for a, b in zip(antes_do_treinamento, apos_o_treinamento):\n","  print(a, b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rfEmG4MIsh-j","executionInfo":{"status":"ok","timestamp":1722125820705,"user_tz":180,"elapsed":461,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"6251983c-4fbc-428b-aef3-8a30c25ea313"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["78 85\n","65 70\n","75 75\n","80 87\n","85 90\n","88 92\n","79 84\n","81 82\n","76 76\n","84 91\n"]}]},{"cell_type":"code","source":["# comparando antes e depois\n","\n","resultado_subtracao = [b - a for a, b in zip(antes_do_treinamento, apos_o_treinamento)]"],"metadata":{"id":"JR1NTNTlsWMN","executionInfo":{"status":"ok","timestamp":1722125850355,"user_tz":180,"elapsed":287,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["resultado_subtracao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mux_xGSusxQr","executionInfo":{"status":"ok","timestamp":1722125964390,"user_tz":180,"elapsed":309,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"71843be1-18b5-4aad-8b36-c7e5a455df6e"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[7, 5, 0, 7, 5, 4, 5, 1, 0, 7]"]},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","source":["Hipóteses desse teste de amostras pareadas\n","\n","H0: mi_d = 0\n","\n","H1: mi_d > 0\n","\n","mi_d é a média das diferenças dos pares"],"metadata":{"id":"LLMBukzJwkGZ"}},{"cell_type":"code","source":["# importando o teste ttest_rel\n","from scipy.stats import ttest_rel"],"metadata":{"id":"vxVG47-bwjZD","executionInfo":{"status":"ok","timestamp":1722126981358,"user_tz":180,"elapsed":327,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["# aplicando o teste t pareado\n","stats, p_valor = ttest_rel(apos_o_treinamento, antes_do_treinamento, alternative=\"greater\")"],"metadata":{"id":"edU5EB5WtNGB","executionInfo":{"status":"ok","timestamp":1722127118572,"user_tz":180,"elapsed":305,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["# exibindo os resultados\n","print(\"Estatística T:\", stats)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a8BtU-2exm4Z","executionInfo":{"status":"ok","timestamp":1722127129022,"user_tz":180,"elapsed":313,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"3e1cade9-8ace-4d9a-f8a6-01a089a35add"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística T: 4.619361962060379\n","p-valor: 0.000627744161772394\n"]}]},{"cell_type":"markdown","source":["# **PARA SABER MAIS: TESTE T PAREADO**\n","Amostras pareadas referem-se a um tipo específico de dados em que as observações em uma amostra estão diretamente relacionadas a observações na outra amostra. Cada elemento em uma amostra está emparelhado ou associado a um elemento específico na outra amostra. Observamos esse tipo de dados em experimentos antes e depois, medidas repetidas ou pares emparelhados.\n","\n","O teste t pareado é uma ferramenta estatística utilizada para comparar duas médias populacionais quando as observações em um par são dependentes, isto é, quando são coletadas das mesmas unidades experimentais em dois momentos diferentes ou sob duas condições diferentes. Este teste é adequado para desenhos de estudo como medidas repetidas ou estudos de caso-controle pareados. A seguir as condições específicas para a aplicação do teste t pareado:\n","\n","* **Dependência das Observações:** As observações em cada par devem ser dependentes, o que significa que são relacionadas ou emparelhadas de alguma maneira, como medições antes e depois em um indivíduo ou medições em indivíduos pareados por características semelhantes.\n","* **Tamanho da Amostra Relativamente Pequeno:** Assim como outros testes t, o teste t pareado é comumente aplicado a amostras de tamanho menor, embora não exista um limite estrito para o tamanho da amostra.\n","* **Distribuição das Diferenças Aproximadamente Normal:** A suposição fundamental é que as diferenças entre as observações pareadas sigam uma distribuição normal. Para amostras pequenas, essa suposição é crucial, mas com o aumento do tamanho da amostra, o teste se torna menos sensível a desvios da normalidade."],"metadata":{"id":"OI7Ypc0ey3Nv"}},{"cell_type":"markdown","source":["# **PRÁTICA 4**"],"metadata":{"id":"bQgObE83zOkD"}},{"cell_type":"markdown","source":["PRIMEIRA PARTE: teste pareado"],"metadata":{"id":"uMTeauFm0OXj"}},{"cell_type":"code","source":["df_equipe_vendas = pd.DataFrame({'Vendedor': [ 'Luíza', 'Bia', 'Rodrigo', 'Allan', 'Evaldo'],\n","                                 'Vendas Antes (R$)': [252.72, 203.91, 307.32, 185.78, 220.5],\n","                                 'Vendas Depois (R$)': [285.1, 223.15, 324.41, 202.23, 240.63]})\n"],"metadata":{"id":"saIYAjQ4xpbo","executionInfo":{"status":"ok","timestamp":1722127562303,"user_tz":180,"elapsed":428,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["df_equipe_vendas[\"dif\"] = df_equipe_vendas[\"Vendas Depois (R$)\"] - df_equipe_vendas[\"Vendas Antes (R$)\"]\n","df_equipe_vendas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"qU26G6gCzTBk","executionInfo":{"status":"ok","timestamp":1722127588765,"user_tz":180,"elapsed":356,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"12b56de3-3c28-43cf-b162-c104c95530eb"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Vendedor  Vendas Antes (R$)  Vendas Depois (R$)    dif\n","0    Luíza             252.72              285.10  32.38\n","1      Bia             203.91              223.15  19.24\n","2  Rodrigo             307.32              324.41  17.09\n","3    Allan             185.78              202.23  16.45\n","4   Evaldo             220.50              240.63  20.13"],"text/html":["\n","  <div id=\"df-5db7c8ee-4a5e-4d0d-9af3-9a38cd461ce8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendedor</th>\n","      <th>Vendas Antes (R$)</th>\n","      <th>Vendas Depois (R$)</th>\n","      <th>dif</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Luíza</td>\n","      <td>252.72</td>\n","      <td>285.10</td>\n","      <td>32.38</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bia</td>\n","      <td>203.91</td>\n","      <td>223.15</td>\n","      <td>19.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Rodrigo</td>\n","      <td>307.32</td>\n","      <td>324.41</td>\n","      <td>17.09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Allan</td>\n","      <td>185.78</td>\n","      <td>202.23</td>\n","      <td>16.45</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Evaldo</td>\n","      <td>220.50</td>\n","      <td>240.63</td>\n","      <td>20.13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5db7c8ee-4a5e-4d0d-9af3-9a38cd461ce8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5db7c8ee-4a5e-4d0d-9af3-9a38cd461ce8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5db7c8ee-4a5e-4d0d-9af3-9a38cd461ce8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5d02f07-323f-47c3-82a2-72894699a70a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5d02f07-323f-47c3-82a2-72894699a70a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5d02f07-323f-47c3-82a2-72894699a70a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_efa33e9b-d26a-4d42-af32-cf688f53a9a0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_equipe_vendas')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_efa33e9b-d26a-4d42-af32-cf688f53a9a0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_equipe_vendas');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_equipe_vendas","summary":"{\n  \"name\": \"df_equipe_vendas\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Vendedor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Bia\",\n          \"Evaldo\",\n          \"Rodrigo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vendas Antes (R$)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47.799259199280485,\n        \"min\": 185.78,\n        \"max\": 307.32,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          203.91,\n          220.5,\n          307.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vendas Depois (R$)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.31859770918067,\n        \"min\": 202.23,\n        \"max\": 324.41,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          223.15,\n          240.63,\n          324.41\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dif\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.5063945469053825,\n        \"min\": 16.44999999999999,\n        \"max\": 32.380000000000024,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          19.24000000000001,\n          20.129999999999995,\n          17.090000000000032\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":85}]},{"cell_type":"markdown","source":["caso de teste t pareado. Hipóteses:\n","\n","H0: mi_d = 0\n","\n","H1: mi_d > 0"],"metadata":{"id":"B5_S5MgIzfIb"}},{"cell_type":"code","source":["stats, p_valor = ttest_rel(df_equipe_vendas[\"Vendas Depois (R$)\"], df_equipe_vendas[\"Vendas Antes (R$)\"], alternative=\"greater\")"],"metadata":{"id":"JR1ja9V0zVXt","executionInfo":{"status":"ok","timestamp":1722127698212,"user_tz":180,"elapsed":288,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["print(\"Estatística T:\", stats)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R1TGCcWPz0Zp","executionInfo":{"status":"ok","timestamp":1722127703285,"user_tz":180,"elapsed":292,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"f00eebec-d2d6-4226-d8a9-53fda7ca2b12"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística T: 7.23705258430516\n","p-valor: 0.0009672115386790286\n"]}]},{"cell_type":"code","source":["# REJEITO A HIPOTESE NULA, e, portanto, A DIFERENÇA É SIGNIFICATIVA!!"],"metadata":{"id":"i-XPrwEez1or"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["SEGUNDA PARTE: teste independente"],"metadata":{"id":"dv5vnvmQ0SbN"}},{"cell_type":"code","source":["df_filiais = pd.DataFrame({'Filial Centro-Norte': [3.2, 2.9, 2.0, 3.3, 3.1],\n","                           'Filial Sul': [3.8, 4.0, 4.7, 4.9, 4.8]})"],"metadata":{"id":"RU39OnI30UgN","executionInfo":{"status":"ok","timestamp":1722127843409,"user_tz":180,"elapsed":343,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":88,"outputs":[]},{"cell_type":"markdown","source":["Caso de teste independente! Hipóteses:\n","\n","H0: mi_1 = mi_2\n","\n","H1: mi_1 != mi_2"],"metadata":{"id":"WN-u7FFi0aDe"}},{"cell_type":"code","source":["stats, p_valor = ttest_ind(df_filiais[\"Filial Centro-Norte\"], df_filiais[\"Filial Sul\"], alternative=\"two-sided\")"],"metadata":{"id":"h1ivUzNd0X1h","executionInfo":{"status":"ok","timestamp":1722127996707,"user_tz":180,"elapsed":303,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["print(\"Estatística T:\", stats)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GiPtWk1a09Kh","executionInfo":{"status":"ok","timestamp":1722128005266,"user_tz":180,"elapsed":297,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"afe387db-5331-41db-8742-606ac8ce1b6b"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística T: -4.73902240270431\n","p-valor: 0.001465798816319686\n"]}]},{"cell_type":"code","source":["# REJEITO A HIPOTESE NULA!!!! EXISTE DIFERENÇA ENTRE AS FILIAIS"],"metadata":{"id":"Ss-Vuml10_W1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **CASO 7** (TESTES NÃO PARAMÉTRICOS)\n","Comparar a eficácia de duas metodologias de treinamento físico, chamadas treino A e treino B, em termos de melhoria no desempenho atlético. Os participantes do estudo foram divididos aleatoriamente em dois grupos, um submetido ao treino A e o outro ao treino B. Foi registrado o ganho de força de cada indivíduo dos que fizeram o treino A e daqueles que fizeram o treino B"],"metadata":{"id":"1haW0aA-1Ty6"}},{"cell_type":"code","source":["# dados de desempenho dos dois grupos\n","treino_a = [5, 3, 8, 4, 6]\n","treino_b = [4, 2, 7, 5, 3]"],"metadata":{"id":"WjANhEOn2B0p","executionInfo":{"status":"ok","timestamp":1722128341103,"user_tz":180,"elapsed":278,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["# importando teste mannwhitneyu\n","from scipy.stats import mannwhitneyu"],"metadata":{"id":"UwiNMWO82RXK","executionInfo":{"status":"ok","timestamp":1722128469267,"user_tz":180,"elapsed":448,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":92,"outputs":[]},{"cell_type":"markdown","source":["H0: as distribuições dos ganhos de força dos treinos são iguais\n","\n","H1: as distribuições dos ganhos de força dos treinos são diferentes"],"metadata":{"id":"ZrcZ09Sz2yaP"}},{"cell_type":"code","source":["# aplicando o teste mann-whitney\n","\n","stats, p_valor = mannwhitneyu(treino_a, treino_b, alternative=\"two-sided\")"],"metadata":{"id":"2FjQfsdx2wmJ","executionInfo":{"status":"ok","timestamp":1722128654242,"user_tz":180,"elapsed":272,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["# exibindo os resultados\n","print(\"Estatística U:\", stats)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PHmYatsv3aVj","executionInfo":{"status":"ok","timestamp":1722128668692,"user_tz":180,"elapsed":440,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"7b176d76-ea02-4ccf-aba1-9b3f46f018b1"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística U: 16.5\n","p-valor: 0.4605966187047713\n"]}]},{"cell_type":"markdown","source":["# **CASO 8**\n","A academia fez uma reorganização na disposição dos equipamentos, mudando de um layout A para um layout B, e deseja avaliar se essa mudança teve um impacto significativo nas preferências dos frequentadores. A academia está interessada em comparar a preferência dos clientes antes e depois da mudança\n","\n","**Amostras pareadas**"],"metadata":{"id":"noDLPehK_PJX"}},{"cell_type":"code","source":["preferencias_antes = [4, 2, 5, 2, 5, 6, 7, 8, 9, 10]\n","preferencias_depois = [8, 5, 3, 5, 8, 9, 9, 9, 10, 9]"],"metadata":{"id":"i9Nr-HMbAQGp","executionInfo":{"status":"ok","timestamp":1722131034804,"user_tz":180,"elapsed":336,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":97,"outputs":[]},{"cell_type":"code","source":["resultado_subtracao = [b - a for a, b in zip(preferencias_antes, preferencias_depois)]"],"metadata":{"id":"ht4ZgtlP3hS5","executionInfo":{"status":"ok","timestamp":1722131035903,"user_tz":180,"elapsed":3,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["resultado_subtracao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KX3fU_l7ArsQ","executionInfo":{"status":"ok","timestamp":1722131076365,"user_tz":180,"elapsed":416,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"0a2fd2ad-2a01-4daa-b821-10c2542e83a2"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4, 3, -2, 3, 3, 3, 2, 1, 1, -1]"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["# media e mediana\n","print(\"Média:\", np.mean(resultado_subtracao))\n","print(\"Mediana:\", np.median(resultado_subtracao))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_7as_1FQABZX","executionInfo":{"status":"ok","timestamp":1722131164837,"user_tz":180,"elapsed":275,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"69997f03-ba3b-40de-b749-0792f1a590e0"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":["Média: 1.7\n","Mediana: 2.5\n"]}]},{"cell_type":"markdown","source":["H0: A mediana da diferença entre os pares é zero\n","\n","H1: a mediana da diferenca entre os pares é != de zero"],"metadata":{"id":"2vQL0QI0Bosc"}},{"cell_type":"code","source":["# importando o teste wilcoxon\n","from scipy.stats import wilcoxon"],"metadata":{"id":"ZgiNnNDvAzYc","executionInfo":{"status":"ok","timestamp":1722132301208,"user_tz":180,"elapsed":282,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":102,"outputs":[]},{"cell_type":"code","source":["stats, p_valor = wilcoxon(preferencias_depois, preferencias_antes, alternative=\"greater\")"],"metadata":{"id":"j29xsmIgFYLu","executionInfo":{"status":"ok","timestamp":1722132413002,"user_tz":180,"elapsed":349,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":["print(\"Estatística U:\", stats)\n","print(\"p-valor:\", p_valor)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2o_TYiu-Fzdq","executionInfo":{"status":"ok","timestamp":1722132418942,"user_tz":180,"elapsed":410,"user":{"displayName":"Pascual Matheo Mazolini Soto","userId":"14463644540855864885"}},"outputId":"9f8fc481-b5a9-4d5f-9f5a-154286d67abe"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["Estatística U: 48.5\n","p-valor: 0.0185546875\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"uYRoUalaF05I"},"execution_count":null,"outputs":[]}]}